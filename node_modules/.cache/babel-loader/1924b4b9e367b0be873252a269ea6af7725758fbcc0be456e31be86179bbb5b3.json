{"ast":null,"code":"import _slicedToArray from \"C:/Users/Admin/vs-code-local/github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\vs-code-local\\\\github.io\\\\src\\\\containers\\\\blogs\\\\Blogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./Blog.scss\";\nimport BlogCard from \"../../components/blogCard/BlogCard\";\nimport { blogSection } from \"../../portfolio\";\nimport { Fade } from \"react-reveal\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Blogs() {\n  _s();\n  var _this = this;\n  var _useContext = useContext(StyleContext),\n    isDark = _useContext.isDark;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    mediumBlogs = _useState2[0],\n    setMediumBlogs = _useState2[1];\n  function setMediumBlogsFunction(array) {\n    setMediumBlogs(array);\n  }\n  //Medium API returns blogs' content in HTML format. Below function extracts blogs' text content within paragraph tags\n  function extractTextContent(html) {\n    return typeof html === \"string\" ? html.split(\"p>\").filter(function (el) {\n      return !el.includes(\">\");\n    }).map(function (el) {\n      return el.replace(\"</\", \".\").replace(\"<\", \"\");\n    }).join(\" \") : NaN;\n  }\n  useEffect(function () {\n    if (blogSection.displayMediumBlogs === \"true\") {\n      var getProfileData = function getProfileData() {\n        fetch(\"/blogs.json\").then(function (result) {\n          if (result.ok) {\n            return result.json();\n          }\n        }).then(function (response) {\n          setMediumBlogsFunction(response.items);\n        }).catch(function (error) {\n          console.error(\"\".concat(error, \" (because of this error Blogs section could not be displayed. Blogs section has reverted to default)\"));\n          setMediumBlogsFunction(\"Error\");\n          blogSection.displayMediumBlogs = \"false\";\n        });\n      };\n      getProfileData();\n    }\n  }, []);\n  if (!blogSection.display) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Fade, {\n    bottom: true,\n    duration: 1000,\n    distance: \"20px\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      id: \"blogs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"blog-header-text\",\n          children: blogSection.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: isDark ? \"dark-mode blog-subtitle\" : \"subTitle blog-subtitle\",\n          children: blogSection.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-main-div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-text-div\",\n          children: blogSection.displayMediumBlogs !== \"true\" || mediumBlogs === \"Error\" ? blogSection.blogs.map(function (blog, i) {\n            return /*#__PURE__*/_jsxDEV(BlogCard, {\n              isDark: isDark,\n              blog: {\n                url: blog.url,\n                image: blog.image,\n                title: blog.title,\n                description: blog.description\n              }\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, _this);\n          }) : mediumBlogs.map(function (blog, i) {\n            return /*#__PURE__*/_jsxDEV(BlogCard, {\n              isDark: isDark,\n              blog: {\n                url: blog.link,\n                title: blog.title,\n                description: extractTextContent(blog.content)\n              }\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Blogs, \"YG8H31ig8IVD013kwNmkki538dE=\");\n_c = Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","useEffect","useContext","BlogCard","blogSection","Fade","StyleContext","Blogs","isDark","mediumBlogs","setMediumBlogs","setMediumBlogsFunction","array","extractTextContent","html","split","filter","el","includes","map","replace","join","NaN","displayMediumBlogs","getProfileData","fetch","then","result","ok","json","response","items","catch","error","console","display","title","subtitle","blogs","blog","i","url","image","description","link","content"],"sources":["C:/Users/Admin/vs-code-local/github.io/src/containers/blogs/Blogs.js"],"sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\nimport \"./Blog.scss\";\nimport BlogCard from \"../../components/blogCard/BlogCard\";\nimport {blogSection} from \"../../portfolio\";\nimport {Fade} from \"react-reveal\";\nimport StyleContext from \"../../contexts/StyleContext\";\nexport default function Blogs() {\n  const {isDark} = useContext(StyleContext);\n  const [mediumBlogs, setMediumBlogs] = useState([]);\n  function setMediumBlogsFunction(array) {\n    setMediumBlogs(array);\n  }\n  //Medium API returns blogs' content in HTML format. Below function extracts blogs' text content within paragraph tags\n  function extractTextContent(html) {\n    return typeof html === \"string\"\n      ? html\n          .split(\"p>\")\n          .filter(el => !el.includes(\">\"))\n          .map(el => el.replace(\"</\", \".\").replace(\"<\", \"\"))\n          .join(\" \")\n      : NaN;\n  }\n  useEffect(() => {\n    if (blogSection.displayMediumBlogs === \"true\") {\n      const getProfileData = () => {\n        fetch(\"/blogs.json\")\n          .then(result => {\n            if (result.ok) {\n              return result.json();\n            }\n          })\n          .then(response => {\n            setMediumBlogsFunction(response.items);\n          })\n          .catch(function (error) {\n            console.error(\n              `${error} (because of this error Blogs section could not be displayed. Blogs section has reverted to default)`\n            );\n            setMediumBlogsFunction(\"Error\");\n            blogSection.displayMediumBlogs = \"false\";\n          });\n      };\n      getProfileData();\n    }\n  }, []);\n  if (!blogSection.display) {\n    return null;\n  }\n  return (\n    <Fade bottom duration={1000} distance=\"20px\">\n      <div className=\"main\" id=\"blogs\">\n        <div className=\"blog-header\">\n          <h1 className=\"blog-header-text\">{blogSection.title}</h1>\n          <p\n            className={\n              isDark ? \"dark-mode blog-subtitle\" : \"subTitle blog-subtitle\"\n            }\n          >\n            {blogSection.subtitle}\n          </p>\n        </div>\n        <div className=\"blog-main-div\">\n          <div className=\"blog-text-div\">\n            {blogSection.displayMediumBlogs !== \"true\" ||\n            mediumBlogs === \"Error\"\n              ? blogSection.blogs.map((blog, i) => {\n                  return (\n                    <BlogCard\n                      key={i}\n                      isDark={isDark}\n                      blog={{\n                        url: blog.url,\n                        image: blog.image,\n                        title: blog.title,\n                        description: blog.description\n                      }}\n                    />\n                  );\n                })\n              : mediumBlogs.map((blog, i) => {\n                  return (\n                    <BlogCard\n                      key={i}\n                      isDark={isDark}\n                      blog={{\n                        url: blog.link,\n                        title: blog.title,\n                        description: extractTextContent(blog.content)\n                      }}\n                    />\n                  );\n                })}\n          </div>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAO,OAAO;AAC5D,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,SAAQC,WAAW,QAAO,iBAAiB;AAC3C,SAAQC,IAAI,QAAO,cAAc;AACjC,OAAOC,YAAY,MAAM,6BAA6B;AAAC;AACvD,eAAe,SAASC,KAAK,GAAG;EAAA;EAAA;EAC9B,kBAAiBL,UAAU,CAACI,YAAY,CAAC;IAAlCE,MAAM,eAANA,MAAM;EACb,gBAAsCR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3CS,WAAW;IAAEC,cAAc;EAClC,SAASC,sBAAsB,CAACC,KAAK,EAAE;IACrCF,cAAc,CAACE,KAAK,CAAC;EACvB;EACA;EACA,SAASC,kBAAkB,CAACC,IAAI,EAAE;IAChC,OAAO,OAAOA,IAAI,KAAK,QAAQ,GAC3BA,IAAI,CACDC,KAAK,CAAC,IAAI,CAAC,CACXC,MAAM,CAAC,UAAAC,EAAE;MAAA,OAAI,CAACA,EAAE,CAACC,QAAQ,CAAC,GAAG,CAAC;IAAA,EAAC,CAC/BC,GAAG,CAAC,UAAAF,EAAE;MAAA,OAAIA,EAAE,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;IAAA,EAAC,CACjDC,IAAI,CAAC,GAAG,CAAC,GACZC,GAAG;EACT;EACArB,SAAS,CAAC,YAAM;IACd,IAAIG,WAAW,CAACmB,kBAAkB,KAAK,MAAM,EAAE;MAC7C,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;QAC3BC,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAAC,UAAAC,MAAM,EAAI;UACd,IAAIA,MAAM,CAACC,EAAE,EAAE;YACb,OAAOD,MAAM,CAACE,IAAI,EAAE;UACtB;QACF,CAAC,CAAC,CACDH,IAAI,CAAC,UAAAI,QAAQ,EAAI;UAChBnB,sBAAsB,CAACmB,QAAQ,CAACC,KAAK,CAAC;QACxC,CAAC,CAAC,CACDC,KAAK,CAAC,UAAUC,KAAK,EAAE;UACtBC,OAAO,CAACD,KAAK,WACRA,KAAK,0GACT;UACDtB,sBAAsB,CAAC,OAAO,CAAC;UAC/BP,WAAW,CAACmB,kBAAkB,GAAG,OAAO;QAC1C,CAAC,CAAC;MACN,CAAC;MACDC,cAAc,EAAE;IAClB;EACF,CAAC,EAAE,EAAE,CAAC;EACN,IAAI,CAACpB,WAAW,CAAC+B,OAAO,EAAE;IACxB,OAAO,IAAI;EACb;EACA,oBACE,QAAC,IAAI;IAAC,MAAM;IAAC,QAAQ,EAAE,IAAK;IAAC,QAAQ,EAAC,MAAM;IAAA,uBAC1C;MAAK,SAAS,EAAC,MAAM;MAAC,EAAE,EAAC,OAAO;MAAA,wBAC9B;QAAK,SAAS,EAAC,aAAa;QAAA,wBAC1B;UAAI,SAAS,EAAC,kBAAkB;UAAA,UAAE/B,WAAW,CAACgC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eACzD;UACE,SAAS,EACP5B,MAAM,GAAG,yBAAyB,GAAG,wBACtC;UAAA,UAEAJ,WAAW,CAACiC;QAAQ;UAAA;UAAA;UAAA;QAAA,QACnB;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACN;QAAK,SAAS,EAAC,eAAe;QAAA,uBAC5B;UAAK,SAAS,EAAC,eAAe;UAAA,UAC3BjC,WAAW,CAACmB,kBAAkB,KAAK,MAAM,IAC1Cd,WAAW,KAAK,OAAO,GACnBL,WAAW,CAACkC,KAAK,CAACnB,GAAG,CAAC,UAACoB,IAAI,EAAEC,CAAC,EAAK;YACjC,oBACE,QAAC,QAAQ;cAEP,MAAM,EAAEhC,MAAO;cACf,IAAI,EAAE;gBACJiC,GAAG,EAAEF,IAAI,CAACE,GAAG;gBACbC,KAAK,EAAEH,IAAI,CAACG,KAAK;gBACjBN,KAAK,EAAEG,IAAI,CAACH,KAAK;gBACjBO,WAAW,EAAEJ,IAAI,CAACI;cACpB;YAAE,GAPGH,CAAC;cAAA;cAAA;cAAA;YAAA,SAQN;UAEN,CAAC,CAAC,GACF/B,WAAW,CAACU,GAAG,CAAC,UAACoB,IAAI,EAAEC,CAAC,EAAK;YAC3B,oBACE,QAAC,QAAQ;cAEP,MAAM,EAAEhC,MAAO;cACf,IAAI,EAAE;gBACJiC,GAAG,EAAEF,IAAI,CAACK,IAAI;gBACdR,KAAK,EAAEG,IAAI,CAACH,KAAK;gBACjBO,WAAW,EAAE9B,kBAAkB,CAAC0B,IAAI,CAACM,OAAO;cAC9C;YAAE,GANGL,CAAC;cAAA;cAAA;cAAA;YAAA,SAON;UAEN,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,GA3FuBjC,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}